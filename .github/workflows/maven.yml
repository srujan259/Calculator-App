name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK
      uses: actions/setup-java@v2
      with:
        java-version: '11'

    - name: Build
      run: |
        mvn clean package
      env:
        DOCKER_IMAGE_TAG: ${{ secrets.BUILD_NUMBER }}

  docker:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Docker Build & Push
      run: |
        echo ${{ secrets.DOCKER_HUB_CREDENTIALS_PSW }} | docker login ${{ secrets.DOCKER_REGISTRY }} -u ${{ secrets.DOCKER_HUB_CREDENTIALS_USR }} --password-stdin
        docker build -t ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_IMAGE_TAG }} .
        docker tag ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_IMAGE_TAG }} ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_IMAGE_LATEST }}
        docker push ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_IMAGE_TAG }}
        docker push ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_IMAGE_LATEST }}
      env:
        DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
        DOCKER_IMAGE_TAG: ${{ secrets.DOCKER_IMAGE_TAG }}
        DOCKER_IMAGE_LATEST: ${{ secrets.DOCKER_IMAGE_LATEST }}

  deploy:
    needs: docker
    runs-on: ubuntu-latest

    steps:
    - name: Set up SSH
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.AWS_INSTANCE_IP }}
        username: ${{ secrets.REMOTE_USER }}
        key: ${{ secrets.AWS_PEM_KEY_FILE }}

    - name: Deploy to AWS EC2
      run: |
        ssh -o StrictHostKeyChecking=no -i ${{ secrets.AWS_PEM_KEY_FILE }} ${{ secrets.REMOTE_USER }}@${{ secrets.AWS_INSTANCE_IP }} 'docker login ${{ secrets.DOCKER_REGISTRY }} -u ${{ secrets.DOCKER_HUB_CREDENTIALS_USR }} -p ${{ secrets.DOCKER_HUB_CREDENTIALS_PSW }}'
        ssh -o StrictHostKeyChecking=no -i ${{ secrets.AWS_PEM_KEY_FILE }} ${{ secrets.REMOTE_USER }}@${{ secrets.AWS_INSTANCE_IP }} 'docker stop calculator-app || true'
        ssh -o StrictHostKeyChecking=no -i ${{ secrets.AWS_PEM_KEY_FILE }} ${{ secrets.REMOTE_USER }}@${{ secrets.AWS_INSTANCE_IP }} 'docker rm calculator-app || true'
        ssh -o StrictHostKeyChecking=no -i ${{ secrets.AWS_PEM_KEY_FILE }} ${{ secrets.REMOTE_USER }}@${{ secrets.AWS_INSTANCE_IP }} 'docker pull ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_IMAGE_TAG }}'
        ssh -o StrictHostKeyChecking=no -i ${{ secrets.AWS_PEM_KEY_FILE }} ${{ secrets.REMOTE_USER }}@${{ secrets.AWS_INSTANCE_IP }} 'docker run -d --name calculator-app -p 30000:4567 ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_IMAGE_TAG }}'
      env:
        AWS_INSTANCE_IP: ${{ secrets.AWS_INSTANCE_IP }}
        REMOTE_USER: ${{ secrets.REMOTE_USER }}
        DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
        DOCKER_IMAGE_TAG: ${{ secrets.DOCKER_IMAGE_TAG }}
        DOCKER_HUB_CREDENTIALS_USR: ${{ secrets.DOCKER_HUB_CREDENTIALS_USR }}
        DOCKER_HUB_CREDENTIALS_PSW: ${{ secrets.DOCKER_HUB_CREDENTIALS_PSW }}
        AWS_PEM_KEY_FILE: ${{ secrets.AWS_PEM_KEY_FILE }}
